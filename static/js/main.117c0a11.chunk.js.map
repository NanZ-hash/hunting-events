{"version":3,"sources":["Components/Event.js","Components/Add.js","Components/EventList.js","Components/Edit.js","Components/Remove.js","Components/RemoveAll.js","Components/QuestClear.js","Components/UserEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","className","onClick","handleDetailsClick","props","event","this","eventName","questRank","React","Component","Add","AddEvent","e","console","log","theEvent","EventList","allevents","map","name","key","id","requirements","des","description","target","successConditions","location","start","startTimestamp","end","endTimestamp","Edit","editEvent","Remove","RemoveEvent","removeEvent","RemoveAll","RemoveAllEvent","removeAllEvents","RemoveAllClear","removeQuestClear","QuestClear","clear","state","isComplete","UserEvents","userEvents","timeStart","Date","timeEnd","getFullYear","getMonth","getDay","App","handleAddEvent","push","setState","handleQuestClear","handleRemoveQuestClear","vlaue","notList","filter","includes","handleRemoveEvent","enentIndex","indexOf","splice","handleRemoveAllEvent","url2","axios","method","url","then","res","current","data","catch","err","events","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.117c0a11.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Event extends React.Component { \r\n\r\n  render ()  { \r\n\r\n   \r\n\r\nreturn   ( \r\n<div className =' event '  onClick={() => this.handleDetailsClick(this.props.event)}> \r\n\r\n<h4>{this.props.eventName} </h4> \r\n<h6> {this.props.questRank} </h6>\r\n\r\n</div>\r\n)\r\n\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class Add extends React.Component { \r\n\r\n  \r\n  AddEvent = (e) => { \r\n    console.log('Event add EVENT ')\r\n    console.log('handling THE click!')\r\n    this.props.theEvent()\r\n}\r\n\r\n  render ()  { \r\n\r\nreturn (  \r\n  <div>\r\n<button onClick={this.AddEvent}> Add </button>\r\n</div>\r\n)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Event from './Event'\r\nimport Add from './Add' ;\r\n\r\nexport default class EventList extends React.Component {\r\n\r\n  render ()  \r\n  { \r\n\r\n    const allevents = this.props.event.map((event)=>{\r\n        return <div> < Event \r\n        eventName={event.name} \r\n        key={event.id}\r\n        questRank={event.requirements} \r\n        des={event.description}\r\n        target={event.successConditions}\r\n        location={event.location.name}\r\n        start={event.startTimestamp}\r\n        end={event.endTimestamp}\r\n        />\r\n        \r\n        <Add theEvent={()=>this.props.theEvent(event) }/>\r\n        </div>\r\n      });\r\n\r\n    \r\nreturn (  <div>\r\n       \r\n        { allevents }\r\n    \r\n\r\n\r\n\r\n</div>\r\n)\r\n}\r\n  }\r\n","import React from 'react';\r\n\r\nexport default class Edit extends React.Component { \r\n\r\n  \r\n  editEvent = (e) => { \r\n    console.log('Event edited ')\r\n    console.log('handling THE click!')\r\n\r\n}\r\n\r\n  render ()  { \r\n\r\nreturn (  \r\n  <div>\r\n<button onClick={this.editEvent}> Edit </button>\r\n</div>\r\n)\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Remove extends React.Component { \r\n\r\n  \r\n  RemoveEvent = (e) => { \r\n    console.log('Event removed ')\r\n    console.log('handling THE REMOVE click!')\r\n    this.props.removeEvent()\r\n\r\n}\r\n\r\n  render ()  { \r\n\r\nreturn (  \r\n  <div>\r\n<button onClick={this.RemoveEvent}> Remove </button>\r\n\r\n</div>\r\n)\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class RemoveAll extends React.Component { \r\n\r\n \r\nRemoveAllEvent = (e) => { \r\n  console.log('All Event removed ')\r\n  console.log('handling THE REMOVE click!')\r\n  this.props.removeAllEvents()\r\n}\r\n\r\n\r\nRemoveAllClear = (e) => { \r\n  console.log('All Completaed! Event removed ')\r\n  console.log('handling THE REMOVE click!')\r\n  this.props.removeQuestClear()\r\n}\r\n\r\n\r\n  render ()  { \r\n\r\nreturn (  \r\n  <div>\r\n<button onClick={this.RemoveAllEvent}> Remove All </button>\r\n\r\n<button onClick={this.RemoveAllClear}> Remove All Clear</button>\r\n</div>\r\n)\r\n\r\n\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class QuestClear extends React.Component { \r\nconstructor(props) { \r\n    super (props); \r\n\r\n    this.state = {\r\n        isComplete : false,\r\n    }\r\n}\r\n  \r\n  clear = (e) => { \r\n    console.log(' Quest Clear ...  ')\r\n    this.props.QuestClear()\r\n  \r\n}\r\n\r\n\r\n\r\n  render ()  { \r\n\r\nreturn (  \r\n  <div>\r\n<button onClick={this.clear}> COMPLETE </button>\r\n</div>\r\n)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Event from './Event'\r\nimport Edit from './Edit'\r\nimport Remove from './Remove'\r\nimport RemoveAll from './RemoveAll'\r\nimport QuestClear from './QuestClear';\r\n // New \r\n\r\nexport default class UserEvents extends React.Component { \r\n\r\n\r\n  render ()  { \r\n\r\n\r\n    const allevents = this.props.userEvents.map((event)=>{\r\n      return <div> \r\n        < Event \r\n      eventName={event.name} \r\n      key={event.id}\r\n      questRank={event.requirements} \r\n      des={event.description}\r\n      target={event.successConditions}\r\n      location={event.location.name}\r\n      start={event.startTimestamp}\r\n      end={event.endTimestamp}\r\n   \r\n       />\r\n      // Notes Here \r\n      <Edit editEvent={()=>this.props.editEvent(event) }/>\r\n      <Remove removeEvent={()=>this.props.removeEvent(event) } />\r\n      <QuestClear QuestClear={()=>this.props.QuestClear(event)} />\r\n      </div> \r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //setting time propryty from the timestamp .. \r\n// Quset tim start..\r\n  const timeStart = new Date(this.props.start)\r\n  const questStart= `${timeStart.getFullYear()} / ${timeStart.getMonth()} / ${timeStart.getDay()}`\r\n// Quest time End.. \r\n  const timeEnd = new Date(this.props.end)\r\n  const questEnd= `${timeEnd.getFullYear()} / ${timeEnd.getMonth()} / ${timeEnd.getDay()}`\r\n\r\n\r\n\r\n  return   ( \r\n\r\n    <div > \r\n     < RemoveAll removeAllEvents={()=>this.props.removeAllEvents(this.props.event)} \r\n       removeQuestClear={()=> this.props.removeQuestClear(this.props.event)}/>\r\n    {allevents}\r\n  \r\n    </div>\r\n    )\r\n    \r\n      }\r\n  }\r\n\r\n    ","import React from 'react';\nimport EventList from './Components/EventList'\nimport MHW from './TestdB.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UserEvents from './Components/UserEvents' \nimport EventDetails from './Components/EventDetails'\nimport axios from 'axios'\n\n\n\nexport default class App extends React.Component { \n  constructor (props)  { \n    super (props); \n\n    // seeting the inital valuse .. \n    this.state ={\n      events : [], \n      UserEvents:[], \n      current :{ },\n      QuestClear:[], \n\n\n  }\n const url = 'https://mhw-db.com/events'; \n  axios({\n    method: 'get',\n    url: url\n})\n    .then(res => {\n      this.setState({events: res.data});\n    })\n    .catch(err => {\n        console.log('ERROR: ', err);\n    });\n}; \n\n\n\n\n\n\n  // for adding the events\n  handleAddEvent = (event) => { \n    const UserEvents = [...this.state.UserEvents] ;\n      UserEvents.push(event)\n      console.log (`addind ${ event.name } to the UserEvents`)\n    this.setState({ UserEvents }) // call for the change to happen . . .\n    console.log(UserEvents) \n  }\n\n\n  // for the Chceking events .. : \nhandleQuestClear = (event) => { \n  const QuestClear = [...this.state.QuestClear] ;\n  QuestClear.push(event)\n    console.log (`Check  ${ event.name } to the UserEvents`)\n  this.setState({ QuestClear }) // call for the change to happen . . .\n  console.log( QuestClear ) \n  \n}\n\n\n\n// for the REMOVEING Chceking events .. : \n\n\n// if the box is checked remove it... \nhandleRemoveQuestClear = (event) => { \n  //let QuestClear = [...this.state.QuestClear] ;\n // let UserEvents = [...this.state.UserEvents]\n  const vlaue = event.name; \n // const serch=this.state.QuestClear.slice(1,enentIndex)\n  console.log(`value ` + vlaue)\n // = e.target.value\n   const notList = this.state.UserEvents.filter(function(event) {  // making a new array \n    return !event.name.includes(vlaue)//!list.includes(serch)\n   })\n  \n\n    console.log (`Clear all Quests`+notList)\n  this.setState({ UserEvents : notList}) // call for the change to happen . . .\n\n\n  }\n  // const UserEvents = [...this.state.UserEvents]\n  // if item compleate remove it ... \n\n\n\n\n\n\n\n\n// for removing the events ... .\nhandleRemoveEvent = (event) => {\n  const UserEvents = [...this.state.UserEvents]\n  // if statmnet if there is somthing selected or remove it all at once ... \n  const enentIndex = UserEvents.indexOf(event); \n  UserEvents.splice(enentIndex,1)\n  console.log (`Removing ${ event.name } from UserEvents `) \n  this.setState({ UserEvents }) // call for the change to happen . . .\n  console.log(UserEvents) \n}\n\n\n\nhandleRemoveAllEvent = (event) => {\n  let UserEvents = [...this.state.UserEvents]\n  let   QuestClear=[...this.state.QuestClear]\n  UserEvents = []\n  QuestClear=[]\n  console.log (`Removing All from UserEvents `) \n  this.setState({ UserEvents ,  QuestClear}) // call for the change to happen . . .\n  console.log(UserEvents) \n}\n\n\n\nhandleDetailsClick = (event) => {\n    \n  const url2 = `https://mhw-db.com/events/${event.id}`\n \n  axios({\n      method: 'get',\n      url: url2\n  })\n      .then(res => {\n         \n\n          this.setState({current: res.data});\n      })\n      .catch(err => {\n          console.log('ERROR: ', err);\n      });\n};\n\n\n  render ()  { \n\nreturn <div>\n  <div className='con'>\n  <div className='div1'>\n  <h1> Event List </h1>\n  <EventList  \n  handleDetailsClick={this.handleDetailsClick}\n  theEvent={this.handleAddEvent}\n  event={this.state.events} \n  userEvents={this.state.UserEvents}\n  />\n</div>\n\n\n<div className='div3' >  </div>\n  \n\n\n<div className =' div2 '> \n<h1> User List </h1>\n  < UserEvents \n  handleDetailsClick={this.handleDetailsClick}\n  event={this.state.events} \n  userEvents={this.state.UserEvents}\n  removeEvent= {this.handleRemoveEvent} \n  removeAllEvents = { this.handleRemoveAllEvent}\n  QuestClear = { this.handleQuestClear}\n  removeQuestClear ={ this.handleRemoveQuestClear}\n  \n  />\n  </div>\n\n</div>\n\n</div>\n\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}